version: "3.8"

services:
  # Postgres DB for voting app
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - back-tier

  # Redis for voting app
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - back-tier

  # Vote web app
  vote:
    build: ./vote
    ports:
      - "5000:80"
    environment:
      OPTION_A: "Cats"
      OPTION_B: "Dogs"
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
    networks:
      - front-tier
      - back-tier

  # Result web app
  result:
    build: ./result
    ports:
      - "5001:80"
    environment:
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
    networks:
      - front-tier
      - back-tier

  # Worker
  worker:
    build: ./worker
    environment:
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
    networks:
      - back-tier

  # SonarQube DB
  sonarqube_db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data
    networks:
      - back-tier

  # SonarQube
  sonarqube:
    image: sonarqube:community
    ports:
      - "9000:9000"
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    depends_on:
      - sonarqube_db
    networks:
      - back-tier

  # Jenkins
 # jenkins:
   # image: jenkins/jenkins:lts
    #container_name: jenkins
    #ports:
     # - "8085:8080"
      #- "50000:50000"
   # volumes:
     # - jenkins_home:/var/jenkins_home
      #- /var/run/docker.sock:/var/run/docker.sock
    #networks:
     # - back-tier

networks:
  front-tier:
  back-tier:

volumes:
  db-data:
  sonarqube_db_data:
  jenkins_home:
